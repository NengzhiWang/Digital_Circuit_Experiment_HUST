// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "05/16/2020 14:25:35"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          digital_clock
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module digital_clock_vlg_vec_tst();
// constants                                           
// general purpose registers
reg alarm_hour_set;
reg alarm_min_set;
reg clk_50MHz;
reg hour_correct;
reg min_correct;
// wires                                               
wire [6:0] hour_01_disp;
wire [6:0] hour_10_disp;
wire [6:0] min_01_disp;
wire [6:0] min_10_disp;
wire [6:0] sec_01_disp;
wire [6:0] sec_10_disp;
wire tone_1k;
wire tone_500;

// assign statements (if any)                          
digital_clock i1 (
// port map - connection between master ports and signals/registers   
	.alarm_hour_set(alarm_hour_set),
	.alarm_min_set(alarm_min_set),
	.clk_50MHz(clk_50MHz),
	.hour_01_disp(hour_01_disp),
	.hour_10_disp(hour_10_disp),
	.hour_correct(hour_correct),
	.min_01_disp(min_01_disp),
	.min_10_disp(min_10_disp),
	.min_correct(min_correct),
	.sec_01_disp(sec_01_disp),
	.sec_10_disp(sec_10_disp),
	.tone_1k(tone_1k),
	.tone_500(tone_500)
);
initial 
begin 
#10000000 $finish;
end 

// alarm_hour_set
initial
begin
	alarm_hour_set = 1'b0;
end 

// alarm_min_set
initial
begin
	alarm_min_set = 1'b1;
	alarm_min_set = #80000 1'b0;
end 

// clk_50MHz
always
begin
	clk_50MHz = 1'b0;
	clk_50MHz = #500 1'b1;
	#500;
end 

// hour_correct
initial
begin
	hour_correct = 1'b0;
end 

// min_correct
initial
begin
	min_correct = 1'b0;
end 
endmodule

